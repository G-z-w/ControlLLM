prompts = dict(
    system_resource_global_prompt="""The AI assistant needs to find the inputs corresponding to each tool from the context and respond in json format. Please notice that AI assistant should never fake the resources that do not exist.

The AI assistant can infer the absent input parameters from the context and respond with JSON format as follows: [{"image": "xxx.png"}, {"bbox": "<GENERATED>-detr-bbox-0"}, "text": "<summarize the text input from context>"]

AI assistant should always respond in the following format:
"<Explanation> [briefly explain your choice here]</Explanation>
<Solution> `SOLUTION` </Solution>"

`SOLUTION` should be strictly with JSON format described above.""",

    system_resource_prompt='''User's request: "{{request}}"

Task: "{{task_description}}".

<Resources>: 
{{resources}}

We use {{tool_name}} to solve this task:
`{{tool_name}}`: {{tool_description}}
Args: 
{{arguments}}
Returns: 
{{returns}}
For the type of "text", AI assistant should summarize the content from the context based on the task and the tool's description. For other types of input, you need to select the inputs from <Resources>. Now we prepare the inputs for {{tool_name}}: {{input}}. Please complete this inputs and return the completed inputs with the format described above like: <Solution> `SOLUTION` </Solution>.
''',

    examples=[
        {
            "role": "system",
            "content": """Here is the chat log [ <assistant>: The required input for detr is already provided in the <Resources> as "sdf.png". Therefore, the inputs for detr are: <Solution>[{"image": "sdf.png"}]</Solution>
        ], which contains the previous steps to solve this task.

        <Resources>: ["sdf.png": it is image and provided by user input.
        "detect the dog in sdf.png": it is text and provided by user input.
        "<GENERATED>-detr-bbox-0": it is bbox and generated by tool "detr".
        ]

        We use CropImageByBBox to solve this task: 
        CropImageByBBox: Crop the image by bounding box (bbox). Useful when you want to extract or save the masked region in the image.
        Inputs: ['image', 'bbox']
        Returns: ["image"]

        Now we prepare the inputs for CropImageByBBox: [{"image": "______"}, {"bbox": "<GENERATED>-detr-bbox-0"}] Please select the resource in <Resources> to complete this inputs.""",
        },
        {
            "role": "assistant",
            "content": """<Solution>[{"image": "sdf.png"}, {"bbox": "<GENERATED>-detr-bbox-0"}]</Solution>""",
        },
    ],
)
